apiVersion: apps/v1beta1
kind: Deployment
metadata: {name: nginx}
spec:
  replicas: 1
  template:
    metadata:
      labels: {app: nginx}
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: pool-3
      affinity:
        # nginx must be on the same node as let's encrypt - as they are using shared host path to share files
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values: ["letsencrypt"]
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: gcr.io/bh-org-01/mojp-dbs-nginx:a6a285fd95b994774aed64bdb4330ce5aee7d1b6
        name: nginx
        ports:
        - {containerPort: 80}
        - {containerPort: 443}
        resources:
          requests: {cpu: 20m}
        volumeMounts:
        - {mountPath: /usr/share/nginx/html, name: nginx-html}
        - {mountPath: /etc/nginx/conf.d, name: nginx-conf-d}
        - {mountPath: /letsencrypt-etc, name: letsencrypt-etc}
      volumes:
      - hostPath: {path: /var/mojp/nginx-html}
        name: nginx-html
      - configMap: {name: nginx-conf-d}
        name: nginx-conf-d
      - hostPath: {path: /var/mojp/letsencrypt-etc}
        name: letsencrypt-etc
---
apiVersion: v1
kind: Service
metadata: {name: nginx}
spec:
  ports:
  - {name: '80', port: 80}
  - {name: '443', port: 443}
  selector: {app: nginx}
  type: LoadBalancer
