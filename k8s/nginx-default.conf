# this file is used to create a configmap, see bin/k8s_recreate_configmaps.sh

# default server - responds to all unknown server names
server {
    listen 80;
    server_name  _;

    # allows to serve the let's encrypt authentication challenge
    location /.well-known/ {
        alias /usr/share/nginx/html/.well-known/;
    }

    # for any unknown domain - we just server the api site without https
    # useful for debugging or in case someone wants fast access to the api

    location /v1/docs {
        proxy_pass http://back:8081;
    }

    location / {
        proxy_pass http://back/;
    }
}

# backend unsecured - redirect to secure
server {
    listen 80;
    server_name api.dbs.bh.org.il;
    location / {
        return 301 https://api.dbs.bh.org.il$request_uri;
    }
}

# backend secured
server {
    listen 443 ssl http2;
    server_name api.dbs.bh.org.il;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /letsencrypt-etc/live/api.dbs.bh.org.il/fullchain.pem;
    ssl_certificate_key /letsencrypt-etc/live/api.dbs.bh.org.il/privkey.pem;
    ssl_trusted_certificate /letsencrypt-etc/live/api.dbs.bh.org.il/chain.pem;
    add_header Strict-Transport-Security "max-age=31536000";

    location /v1/docs {
        proxy_pass http://back:8081;
    }

    location /pipelines/ {
        proxy_pass http://pipelines:5000/;
    }

    location / {
        proxy_pass http://back/;
    }
}

# frontend unsecured - redirect to secure
server {
    listen 80;
    server_name dbs.bh.org.il;
    location / {
        return 301 https://dbs.bh.org.il$request_uri;
    }
}

# sitemap files cache
proxy_cache_path /var/cache/nginx/sitemap levels=1:2 keys_zone=sitemap:5m max_size=1g inactive=1440m use_temp_path=off;

# frontend secured
server {
    listen 443 ssl http2;
    server_name dbs.bh.org.il;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:!DSS';
    ssl_prefer_server_ciphers on;
    ssl_session_timeout 5m;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_certificate /letsencrypt-etc/live/dbs.bh.org.il/fullchain.pem;
    ssl_certificate_key /letsencrypt-etc/live/dbs.bh.org.il/privkey.pem;
    ssl_trusted_certificate /letsencrypt-etc/live/dbs.bh.org.il/chain.pem;
    add_header Strict-Transport-Security "max-age=31536000";

    location /cjh/ {
        rewrite ^/cjh/(.*)$ /$1 break;
        proxy_pass http://67.111.179.108:8080;
    }

    location /sitemap {
        proxy_cache sitemap;
        proxy_cache_use_stale error timeout;
        proxy_pass http://minio:9000;
    }

    location / {
        proxy_pass http://front/;
    }
}
